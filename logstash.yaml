apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-cfg
data:
  logstash.conf: |
    input {
      beats {
              port => 5044
      }

      tcp {
              port => 5000
      }
    }
    filter {
      if [type] == "k8s-log" {
        grok {
          match => { "message" => "(%{TIMESTAMP_ISO8601:logdatetime}  %{LOGLEVEL:level} %{GREEDYDATA:logmessage})|%{GREEDYDATA:logmessage}" }
          remove_field => [ "message" ]
          remove_field => [ "agent" ]
          remove_field => [ "ecs" ]
          remove_field => [ "tags" ]
        }
      }
    }

    output {
      if [fields][service] == "k8s-log" {
        elasticsearch {
          hosts => ["http://es-0.es-cluster:9200","http://es-1.es-cluster:9200","http://es-2.es-cluster:9200"]
          index => "k8s-%{[kubernetes][namespace]}-%{[kubernetes][labels][app]}-%{+YYYY.MM.dd}"
        }
        #stdout { codec => rubydebug { metadata => true}}
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: elk
  labels:
    app: logstash
spec:
  ports:
  - name: listen
    port: 5044
  - name: port2
    port: 5000
  - name: port3
    port: 9600
  selector:
    app: logstash
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: elk
  labels:
    app: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: logstash:7.16.3
        env:
          - name: ELASTICSEARCH_URL
            value: http://es-cluster:9200 # The domain es-cluster will resolve to a list of IP addresses for the 3 Elasticsearch Pods. 
          - name: LS_JAVA_OPTS
            value: "-Xmx256m -Xms256m"
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            memory: "1G"
        ports:
        - containerPort: 5601
        volumeMounts:
          - name: logstash-cfg
            mountPath: /usr/share/logstash/pipeline/
            readOnly: true
      volumes:
        - name: logstash-cfg
          configMap:
            name: logstash-cfg